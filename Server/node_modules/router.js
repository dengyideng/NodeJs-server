/*var Login = require(CON + 'login');

exports.router = function(res, req){
	var pathname = decodeURI(lib.url.parse(req.url).pathname);
	lib.httpParam.init(req, res);
	global.sessionLib = lib.session.start(res, req);
	var model = pathname.substr(1),
	    controller = lib.httpParam.GET('c'),
	    Class = '';

	if(pathname == '/favicon.ico'){
		return;
	}else if(pathname == '/' ){
		res.render(VIEW + 'index.jade');
		return;
	}

	try{
		Class = require(CON + model);
	}
	catch(err){
		lib.staticModule.getStaticFile(pathname, res, req, BASE_DIR);
		return;
	}

	if(Class){
		var login = new Login(res, req);
		var ret = login.checkSession(model);
		if(ret){
			var object = new Class(res, req);
			object[controller].call();
		}else{
			res.render(VIEW + 'index.jade');
		}
	}else{
		res.writeHead(404, {'Content-Type' : 'text/plain'});
		res.end('can not find source!');
	}
};*/

//路由分发处理
exports.router = function(res, req){
	var pathname = lib.url.parse(req.url).pathname;

	if(pathname == '/favicon.ico' ||pathname == '/'){
		return;
	}else{
		var module = pathname.substr(1);
		switch (module){
			case 'login' :
			    var login = require(LIB + 'login');
			    login.login(req, res);
			    break;

			case 'register' :
			    var register = require(LIB + 'register');
			    register.register(req, res);
			    break;

			case 'push' :
			    var push = require(LIB + 'push');
			    push.push(req, res);
			    break;

			case 'personInfo' :
			    var personInfo = require(LIB + 'personInfo');
			    personInfo.personInfo(req, res);
			    break;

			case 'personInfoChange' :
			    var personInfoChange = require(LIB + 'personInfoChange');
			    personInfoChange.personInfoChange(req, res);
			    break;

			case  'sendPostings' :
			    var sendPostings = require(LIB + 'sendPostings');
			    sendPostings.sendPostings(req, res);
			    break;

			case  'sendPostingsAction' :
			    var sendPostingsAction = require(LIB + 'sendPostingsAction');
			    sendPostingsAction.sendPostingsAction(req, res);
			    break;

			case 'deletePostingsAction' :
			    var deletePostingsAction = require(LIB + 'deletePostingsAction');
			    deletePostingsAction.deletePostingsAction(req, res);
			    break;

			case 'commentsAction' :
			    var commentsAction = require(LIB + 'commentsAction');
			    commentsAction.commentsAction(req, res);
			    break;

			case 'searchAction' :
			    var searchAction = require(LIB + 'searchAction');
			    searchAction.searchAction(req, res);
			    break;

			case 'collect' :
			    var collect = require(LIB + 'collect');
			    collect.collect(req, res);
			    break;

			case 'collectAction' :
			    var collectAction = require(LIB + 'collectAction');
			    collectAction.collectAction(req, res);
			    break;

			case 'collectCancel' :
			    var collectCancel = require(LIB + 'collectCancel');
			    collectCancel.collectCancel(req, res);
			    break;

			default :;
		}
	}
};